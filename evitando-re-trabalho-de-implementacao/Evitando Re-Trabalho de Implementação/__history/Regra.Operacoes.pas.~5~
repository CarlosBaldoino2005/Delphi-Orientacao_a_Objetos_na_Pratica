unit Regra.Operacoes;

interface

uses
  System.SysUtils,
  Regra.Interfaces;

type
  TRegraOperacoes = class(TInterfacedObject, iRegrasOperacoes)
    private
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iRegrasOperacoes;
      function CalcularImposto ( aValue : Currency ) : Currency; overload;
      function CalcularImposto ( aValue : String ) : Currency; overload;
  end;

implementation

{ TRegraOperacoes }

function TRegraOperacoes.CalcularImposto(aValue: Currency): Currency;
begin
  Result := (aValue * 0.3) + aValue;

 // if Assigned(FDisplay) then
    //FDisplay(CurrToStr(Result));
end;

function TRegraOperacoes.CalcularImposto(aValue: String): Currency;
begin

end;

constructor TRegraOperacoes.Create;
begin

end;

destructor TRegraOperacoes.Destroy;
begin

  inherited;
end;

class function TRegraOperacoes.New: iRegrasOperacoes;
begin
  Result := Self.Create;
end;

end.
